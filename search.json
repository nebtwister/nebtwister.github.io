[
  {
    "objectID": "posts/ncaa-volleyball-serving-analysis/index.html",
    "href": "posts/ncaa-volleyball-serving-analysis/index.html",
    "title": "How accurately do service aces and errors determine a team’s success?",
    "section": "",
    "text": "Following a loss, particularly if it was close, the novice fan scans the box score for those pesky service errors. Cut your service errors in half and that could be the difference between winning and losing. Seems like an easy fix right?\nIt’s rarely that simple.\n\n\nCode\n#load in neccessary libraries \nlibrary(tidyverse)\n\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\n\nCode\nlibrary(ggrepel)\nlibrary(patchwork)\nlibrary(gt)\n\n\n\n\nCode\n#load in the data\nserves &lt;- read.csv(\"data/derek_aces_errors.csv\")\n\n\n\n\nCode\nserve_info &lt;- serves |&gt;\n  group_by(team_name, season)|&gt;\n  mutate(\n    ace_differential = aces -service_errors,\n    point_differential= points_won-(points_played-points_won),\n   serving_ratio = aces/service_errors, \n   service_error_ptPct=service_errors/(points_played-points_won)*100\n  )|&gt;\narrange(desc(service_error_ptPct))\n\n\n\n\nCode\nserve_table &lt;- serves|&gt;\n  group_by(season)|&gt;\n  drop_na()|&gt;\n  summarise(\n    ace_average=mean(aces),\n    errors=mean(service_errors)\n  )\nserve_table\n\n\n# A tibble: 6 × 3\n  season ace_average errors\n   &lt;int&gt;       &lt;dbl&gt;  &lt;dbl&gt;\n1   2019       145.    214.\n2   2020        72.3   102.\n3   2021       148.    205.\n4   2022       161.    217.\n5   2023       164.    226.\n6   2024        99.1   141.\n\n\n\n\nCode\n#table for average aces and errors for last 6 years\nserve_table |&gt;\n  gt()|&gt;\n  cols_label(\n    ace_average = \"Avg. Aces\",\n    errors = \"Avg. Errors\",\n    season = \"Season\"\n  ) |&gt;\n  tab_header(\n    title = \"Teams are serving more aggressivley\",\n    subtitle = \"Both aces and errors continue to climb\"\n  )|&gt;\n   tab_style(\n    style = cell_text(color = \"black\", weight = \"bold\", align = \"left\"),\n    locations = cells_title(\"title\")\n  ) |&gt;\n  tab_style(\n    style = cell_text(color = \"black\", align = \"left\"),\n    locations = cells_title(\"subtitle\")\n  )|&gt;\n  tab_source_note(\n    source_note = md(\"**By:** Derek Harrington  |  Data courtesy of **Evollve.net**\"))|&gt;\n   tab_style(\n    locations = cells_column_labels(columns = everything()),\n    style = list(\n      cell_borders(sides = \"bottom\", weight = px(3)),\n      cell_text(weight = \"bold\", size = 12)))|&gt;\n    opt_row_striping() |&gt;\n  opt_table_lines(\"none\") |&gt;\n  fmt_number(\n    columns = c(ace_average, errors),\n    decimals = 0)|&gt;\n  tab_style(\n    style = list(\n      cell_fill(color = \"white\"),\n      cell_text(color = \"darkgreen\", weight=\"bold\")\n    ),\n    locations = cells_body(\n      rows = season == \"2022\"\n    )\n  )\n\n\n\n\n\n\n\n\nTeams are serving more aggressivley\n\n\nBoth aces and errors continue to climb\n\n\nSeason\nAvg. Aces\nAvg. Errors\n\n\n\n\n2019\n145\n214\n\n\n2020\n72\n102\n\n\n2021\n148\n205\n\n\n2022\n161\n217\n\n\n2023\n164\n226\n\n\n2024\n99\n141\n\n\n\nBy: Derek Harrington | Data courtesy of Evollve.net\n\n\n\n\n\n\n\n\n\n\nCode\n#find the max and min in aces and service errors for power five teams from 2019-2024 for limits on graphs\npowerfive &lt;- c(\"SEC\", \"Big Ten\",\"ACC\", \"Big 12\", \"Pac-12\")\nserves |&gt;\n  group_by(season)|&gt;\nfilter (conference %in% powerfive)|&gt; slice_min(aces, n = 1)|&gt;\n select(team_name,aces, season)\n\n\n# A tibble: 6 × 3\n# Groups:   season [6]\n  team_name        aces season\n  &lt;chr&gt;           &lt;int&gt;  &lt;int&gt;\n1 Kansas             86   2019\n2 Oklahoma           18   2020\n3 Oregon St.         94   2021\n4 Mississippi St.    99   2022\n5 Mississippi St.   113   2023\n6 Mississippi St.    62   2024\n\n\nCode\nserves |&gt;\n   group_by(season)|&gt;\nfilter (conference %in% powerfive)|&gt; slice_max(aces, n = 1)|&gt;\n select(team_name,aces, season)\n\n\n# A tibble: 6 × 3\n# Groups:   season [6]\n  team_name       aces season\n  &lt;chr&gt;          &lt;int&gt;  &lt;int&gt;\n1 Wisconsin        189   2019\n2 Washington       144   2020\n3 Illinois         221   2021\n4 Boston College   225   2022\n5 Arizona St.      243   2023\n6 Maryland         132   2024\n\n\nCode\nserves |&gt;\n     group_by(season)|&gt;\nfilter (conference %in% powerfive)|&gt; slice_max(service_errors, n = 1)|&gt;\n select(team_name,service_errors, season)\n\n\n# A tibble: 6 × 3\n# Groups:   season [6]\n  team_name           service_errors season\n  &lt;chr&gt;                        &lt;int&gt;  &lt;int&gt;\n1 Texas                          294   2019\n2 Washington                     208   2020\n3 Arkansas                       324   2021\n4 Southern California            376   2022\n5 Stanford                       390   2023\n6 Kentucky                       243   2024\n\n\nCode\nserves |&gt;\n     group_by(season)|&gt;\nfilter (conference %in% powerfive)|&gt; slice_min(service_errors, n = 1)|&gt;\n select(team_name,service_errors, season)\n\n\n# A tibble: 6 × 3\n# Groups:   season [6]\n  team_name      service_errors season\n  &lt;chr&gt;                   &lt;int&gt;  &lt;int&gt;\n1 Florida St.               148   2019\n2 Syracuse                   42   2020\n3 California                162   2021\n4 Missouri                  141   2022\n5 Cincinnati                158   2023\n6 South Carolina             85   2024\n\n\n\n\nCode\nmin19 &lt;- serves |&gt; filter(season==\"2019\",team_name==\"Minnesota\")\n\nstan19&lt;- serves |&gt;\n  filter(season==\"2019\",team_name==\"Stanford\")\n\nwis19 &lt;-serves |&gt;\n  filter(season==\"2019\",team_name==\"Wisconsin\")\n\nbay19&lt;- serves |&gt;\n  filter(season==\"2019\",team_name==\"Baylor\")\npowerfive &lt;- c(\"SEC\", \"Big Ten\",\"ACC\", \"Big 12\", \"Pac-12\")\nbubble19 &lt;- serves|&gt;\nfilter(season==\"2019\",conference%in%powerfive )\n  plot19 &lt;-ggplot() +\n   geom_point(\n    data = bubble19, \n    aes(x = service_errors, \n        y = aces, size=matches_won),alpha = .3, color=\"grey\") +\n    labs(\n      x=\"\"\n    )+\n    geom_point(\n      data=min19,\n      aes(x=service_errors,\n          y=aces, size=matches_won), color=\"#7a0019\")+\n    geom_point(\n      data=stan19,\n      aes(x=service_errors,\n          y=aces, size=matches_won), color=\"#8C1515\")+\n        geom_point(\n      data=wis19,\n      aes(x=service_errors,\n          y=aces, size=matches_won), color=\"#C5050C\")+\n      geom_point(\n      data=bay19,\n      aes(x=service_errors,\n          y=aces, size=matches_won), color=\"#154734\")+\n       annotate(\n    \"label\", \n    x =280, \n    y = 100, \n    label = \"2019\", size=5\n  )+\n  geom_text_repel(\n    data = min19, \n    aes(\n      x = service_errors, \n      y = aces, \n      label = team_name), nudge_y = 8)+\n     geom_text_repel(\n    data = stan19, \n    aes(\n      x = service_errors, \n      y = aces, \n      label = team_name), nudge_y = 8)+\n     geom_text_repel(\n    data = wis19, \n    aes(\n      x = service_errors, \n      y = aces, \n      label = team_name),nudge_y = 8)+\n     geom_text_repel(\n    data = bay19, \n    aes(\n      x = service_errors, \n      y = aces, \n      label = team_name), nudge_x = 10)+\n    labs(\n      y=\"Avg. aces\",\n      x=\"Avg. service errors\"\n    )+\n  \n    \n  scale_size(range = c(2, 8), name=\"Season wins\")+\n      geom_vline(xintercept = 214.1672) + \n  geom_hline(yintercept = 145.409)+\n    theme_minimal()\n  \n\n\n  \n  \n  \n  \n  \n  \n  #2021 Final Four\n  neb21 &lt;- serves |&gt; filter(season==\"2021\",team_name==\"Nebraska\")\n\nPitt21&lt;- serves |&gt;\n  filter(season==\"2021\",team_name==\"Pittsburgh\")\n\nwis21 &lt;-serves |&gt;\n  filter(season==\"2021\",team_name==\"Wisconsin\")\n\nlou21&lt;- serves |&gt;\n  filter(season==\"2021\",team_name==\"Louisville\")\npowerfive &lt;- c(\"SEC\", \"Big Ten\",\"ACC\", \"Big 12\", \"Pac-12\")\nbubble21 &lt;- serves|&gt;\nfilter(season==\"2021\",conference%in%powerfive )\n   plot21 &lt;- ggplot() +\n  geom_point(\n    data = bubble21, \n    aes(x = service_errors, \n        y = aces, size=matches_won),alpha = .3, color=\"grey\") +\n    geom_point(\n      data=neb21,\n      aes(x=service_errors,\n          y=aces, size=matches_won ),color=\"#E41C38\")+\n    geom_point(\n      data=Pitt21,\n      aes(x=service_errors,\n          y=aces, size=matches_won), color=\"#003594\")+\n        geom_point(\n      data=wis21,\n      aes(x=service_errors,\n          y=aces, size=matches_won), color=\"#C5050C\")+\n      geom_point(\n      data=lou21,\n      aes(x=service_errors,\n          y=aces, size=matches_won), color=\"#AD0000\")+\n       annotate(\n    \"label\", \n    x =300, \n    y = 110, \n    label = \"2021\", size=5\n  )+\n  geom_text_repel(\n    data = neb21, \n    aes(\n      x = service_errors, \n      y = aces, \n      label = team_name), nudge_y = -7)+\n     geom_text_repel(\n    data = Pitt21, \n    aes(\n      x = service_errors, \n      y = aces, \n      label = team_name), nudge_y = 10)+\n     geom_text_repel(\n    data = wis21, \n    aes(\n      x = service_errors, \n      y = aces, \n      label = team_name), nudge_x = 13)+\n     geom_text_repel(\n    data = lou21, \n    aes(\n      x = service_errors, \n      y = aces, \n      label = team_name), nudge_y = -9)+\n     labs(\n       y=\"Avg. aces\",\n       x=\"Avg. service errors\"\n     )+\n    \n  scale_size(range = c(2, 8), name=\"Season wins\")+\n      geom_vline(xintercept = 204.5647) + \n  geom_hline(yintercept = 148.0618)+\n    theme_minimal()+\n    theme(\n       panel.grid.minor = element_blank()\n    )\n   \n   \n   \n   \n   \n   \n   #2022 Final Four\n  tex22 &lt;- serves |&gt; filter(season==\"2022\",team_name==\"Texas\")\n\nPitt22&lt;- serves |&gt;\n  filter(season==\"2022\",team_name==\"Pittsburgh\")\n\nsan22 &lt;-serves |&gt;\n  filter(season==\"2022\",team_name==\"San Diego\")\n\nlou22&lt;- serves |&gt;\n  filter(season==\"2022\",team_name==\"Louisville\")\npowerfive &lt;- c(\"SEC\", \"Big Ten\",\"ACC\", \"Big 12\", \"Pac-12\")\nbubble22 &lt;- serves|&gt;\nfilter(season==\"2022\",conference%in%powerfive )\n  plot22 &lt;- ggplot() +\n  geom_point(\n    data = bubble22, \n    aes(x = service_errors, \n        y = aces, size=matches_won),alpha = .3, color=\"grey\") +\n    scale_size(range = c(2, 8), name=\"Season wins\")+\n    geom_point(\n      data=tex22,\n      aes(x=service_errors,\n          y=aces, size=matches_won), color=\"#bf5700\")+\n    geom_point(\n      data=Pitt22,\n      aes(x=service_errors,\n          y=aces, size=matches_won), color=\"#003594\")+\n        geom_point(\n      data=san22,\n      aes(x=service_errors,\n          y=aces, size=matches_won), color=\"#84bce8\")+\n      geom_point(\n      data=lou22,\n      aes(x=service_errors,\n          y=aces, size=matches_won), color=\"#AD0000\")+\n      annotate(\n    \"label\", \n    x =350, \n    y = 110, \n    label = \"2022\", size=5\n  )+\n  geom_text_repel(\n    data = tex22, \n    aes(\n      x = service_errors, \n      y = aces, \n      label = team_name), nudge_y = 10)+\n     geom_text_repel(\n    data = Pitt22, \n    aes(\n      x = service_errors, \n      y = aces, \n      label = team_name), nudge_y = -7)+\n     geom_text_repel(\n    data = san22, \n    aes(\n      x = service_errors, \n      y = aces, \n      label = team_name),nudge_x = 28)+\n     geom_text_repel(\n    data = lou22, \n    aes(\n      x = service_errors, \n      y = aces, \n      label = team_name), nudge_y = 8)+\n     labs(\n       y=\"Avg. aces\",\n       x=\"Avg. service errors\"\n     )+\n     scale_size(range = c(2, 8), name=\"Season wins\")+\n     geom_vline(xintercept = 217.4812   ) + \n  geom_hline(yintercept = 161.0435)+\n    theme_minimal()\n\n\nScale for size is already present.\nAdding another scale for size, which will replace the existing scale.\n\n\nCode\n  #2023 Final Four\n  tex23 &lt;- serves |&gt; filter(season==\"2023\",team_name==\"Texas\")\n\nPitt23&lt;- serves |&gt;\n  filter(season==\"2023\",team_name==\"Pittsburgh\")\n\nneb23 &lt;-serves |&gt;\n  filter(season==\"2023\",team_name==\"Nebraska\")\n\nwis23&lt;- serves |&gt;\n  filter(season==\"2023\",team_name==\"Wisconsin\")\npowerfive &lt;- c(\"SEC\", \"Big Ten\",\"ACC\", \"Big 12\", \"Pac-12\")\nbubble23 &lt;- serves|&gt;\nfilter(season==\"2023\",conference%in%powerfive )\n  plot23 &lt;- ggplot() +\n  geom_point(\n    data = bubble23, \n    aes(x = service_errors, \n        y = aces, size=matches_won),alpha = .3, color=\"grey\") +\n    geom_point(\n      data=tex23,\n      aes(x=service_errors,\n          y=aces, size=matches_won), color=\"#bf5700\")+\n    geom_point(\n      data=Pitt23,\n      aes(x=service_errors,\n          y=aces, size=matches_won), color=\"#003594\")+\n        geom_point(\n      data=neb23,\n      aes(x=service_errors,\n          y=aces, size=matches_won), color=\"#E41C38\")+\n      geom_point(\n      data=wis23,\n      aes(x=service_errors,\n          y=aces, size=matches_won), color=\"#C5050C\")+\n      annotate(\n    \"label\", \n    x =370, \n    y = 125, \n    label = \"2023\", size=5\n  )+\n  geom_text_repel(\n    data = tex23, \n    aes(\n      x = service_errors, \n      y = aces, \n      label = team_name), nudge_y = 10)+\n     geom_text_repel(\n    data = Pitt23, \n    aes(\n      x = service_errors, \n      y = aces, \n      label = team_name), nudge_y = -7)+\n     geom_text_repel(\n    data = neb23, \n    aes(\n      x = service_errors, \n      y = aces, \n      label = team_name), nudge_x = 35)+\n     geom_text_repel(\n    data = wis23, \n    aes(\n      x = service_errors, \n      y = aces, \n      label = team_name), nudge_x = 35)+\n    labs(\n      y=\"Avg. aces\",\n      x=\"Avg. service errors\"\n    )+\n  scale_size(range = c(3, 8), name=\"Season wins\")+\n      geom_vline(xintercept = 226.3285  ) + \n  geom_hline(yintercept = 164.4942  )+\n    theme_minimal() \n  \n  \n  \n  \n  \n   \n\n#2024 for reference\n\nPitt24 &lt;- serves |&gt; filter(season==\"2024\",team_name==\"Pittsburgh\")\n\nlou24&lt;- serves |&gt;\n  filter(season==\"2024\",team_name==\"Louisville\")\n\nneb24 &lt;-serves |&gt;\n  filter(season==\"2024\",team_name==\"Nebraska\")\n\npsu24&lt;- serves |&gt;\n  filter(season==\"2024\",team_name==\"Penn St.\")\npowerfive &lt;- c(\"SEC\", \"Big Ten\",\"ACC\", \"Big 12\", \"Pac-12\")\nbubble24 &lt;- serves|&gt;\nfilter(season==\"2024\",conference%in%powerfive )\n plot24 &lt;- ggplot() +\n  geom_point(\n    data = bubble24, \n    aes(x = service_errors, \n        y = aces, size=matches_won),alpha = .3, color=\"grey\") +\n    geom_point(\n      data=lou24,\n      aes(x=service_errors,\n          y=aces, size=matches_won), color=\"#AD0000\")+\n    geom_point(\n      data=Pitt24,\n      aes(x=service_errors,\n          y=aces, size=matches_won), color=\"#003594\")+\n        geom_point(\n      data=neb24,\n      aes(x=service_errors,\n          y=aces, size=matches_won), color=\"#E41C38\")+\n      geom_point(\n      data=psu24,\n      aes(x=service_errors,\n          y=aces, size=matches_won), color=\"#001E44\")+\n   annotate(\n    \"label\", \n    x =230, \n    y = 70, \n    label = \"2024\", size=5\n  )+\n  geom_text_repel(\n    data = lou24, \n    aes(\n      x = service_errors, \n      y = aces, \n      label = team_name), nudge_y=-3)+\n     geom_text_repel(\n    data = Pitt24, \n    aes(\n      x = service_errors, \n      y = aces, \n      label = team_name), nudge_y=-3)+\n   \n     geom_text_repel(\n    data = neb24, \n    aes(\n      x = service_errors, \n      y = aces, \n      label = team_name), nudge_y=-3)+\n     geom_text_repel(\n    data = psu24, \n    aes(\n      x = service_errors, \n      y = aces, \n      label = team_name), nudge_x = 25)+\n    labs(\n      y=\"Avg. Aces\",\n      x=\"Avg. service errors\")+\n \n  scale_size(range = c(3, 8), name=\"Season wins\")+\n      geom_vline(xintercept = 141.4566  ) + \n  geom_hline(yintercept = 99.06358  )+\n    theme_minimal()\n \n (plot19+plot21)/(plot22+plot23+plot24)+\n   labs(\n     y=\"Avg. Aces\",\n     x=\"Avg. service errors\"\n   )+\n   plot_annotation(\n    title = \"\",\n    subtitle = \"Pittsburgh in a league of it's own in 2024\",\n    caption = \"By Derek Harrrington  |  Data courtesy of Evollve.net\"\n  ) &\n  theme(\n    plot.title = element_text(size = 18, face = \"bold\"),\n    axis.title = element_text(size = 10),\n    plot.subtitle = element_text(size = 14),\n    panel.grid.minor = element_blank()\n  )\n\n\n\n\n\n\n\n\n\n\n\nCode\n#use the serving info to see what teams are being hurt by service errors in the points they don't win\nperrenial &lt;- c(\"Stanford\", \"Texas\", \"Wisconsin\", \"Louisville\", \"Pittsburgh\", \"Nebraska\", \"Penn St.\", \"Kentucky\", \"Minnesota\", \"Oregon\", \"Florida\", \"Purdue\")\nserve_er_pct &lt;- serve_info |&gt; filter(team_name %in% perrenial)|&gt;\n  arrange(desc(service_error_ptPct)) |&gt;\nselect(season, team_name, service_error_ptPct)\n\n\nff&lt;-read.csv(\"data/finalfourteams.csv\")\nff19 &lt;- ff |&gt; filter(season==\"2019\")\nff20 &lt;- ff |&gt; filter(season==\"2020\")\nff21 &lt;- ff |&gt; filter(season==\"2021\")\nff22 &lt;- ff |&gt; filter(season==\"2022\")\nff23 &lt;- ff |&gt; filter(season==\"2023\")\n\n\n#plot with facet wrap\nserve_er_pct |&gt;\n \nggplot()+ \n  geom_line(data=serve_er_pct, aes(x = season, y = service_error_ptPct, group=team_name))+\n  scale_y_continuous(limits=c(4.5,20))+\n  scale_x_continuous(breaks = c(2019, 2020, 2021, 2022, 2023, 2024), limits=c(2018.8, 2024.2))+\n  facet_wrap(~team_name)+\n  \n  geom_point(data=ff19, aes(x=season, y=service_error_ptPct), color=\"red\", size=2)+\n  geom_point(data=ff20, aes(x=season, y=service_error_ptPct), color=\"red\",size=2)+\n  geom_point(data=ff21, aes(x=season, y=service_error_ptPct), color=\"red\", size=2)+\n  geom_point(data=ff22, aes(x=season, y=service_error_ptPct), color=\"red\", size=2)+\n  geom_point(data=ff23, aes(x=season, y=service_error_ptPct), color=\"red\", size=2)+\n  \n labs(\n    title = \"Powerhouse programs and \",\n    subtitle = \"Purdue doesn't give free points from the service line\",\n    y = \"% of total points lost by service errors\", x = \"Season\",\n    caption = \"By: Derek Harrington  |  Data courtesy of Evollve.net\"\n  ) +\n theme_minimal() +\n  theme(\n    plot.title = element_text(size = 16, face = \"bold\"),\n    plot.subtitle = element_text(size = 12),\n    axis.title = element_text(size = 8),\n    panel.grid.minor = element_blank(),\n    axis.text.x = element_text(angle = 60, hjust = 1))"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "Hi! My name is Derek Harrington, and I’m a University of Nebraska - Lincoln senior. I’m working on my bachelor’s of journalism with a major in sports media and communications. I like a variety of sports, but volleyball is my passion."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "DereksSportsBlog",
    "section": "",
    "text": "How accurately do service aces and errors determine a team’s success?\n\n\n\n\n\n\nNCAA serving\n\n\n\n\n\n\n\n\n\nNov 5, 2024\n\n\nDerek Harrington\n\n\n\n\n\n\nNo matching items"
  }
]