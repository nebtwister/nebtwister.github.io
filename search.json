[
  {
    "objectID": "posts/ncaa-volleyball-serving-analysis/index.html",
    "href": "posts/ncaa-volleyball-serving-analysis/index.html",
    "title": "The anatomy of the service error",
    "section": "",
    "text": "Code\nlibrary(tidyverse)\nlibrary(ggrepel)\nlibrary(gt)\nlibrary(patchwork)\nlibrary(ggtext)\n\n\nIf you’ve ever attended or watched a volleyball match, whether it’s high school or the knockout stage of the Summer Olympics, one play provokes exasperated groans from the crowd like no other: service errors. Ah, those pesky things!\nIf your team loses a match that was decided by just a few points, then surely those eight service errors are the culprit. If those eight serves are over and in play, the team could probably win about half of those points and thus the match. Right? Possibly. But it’s not that simple.\nOftentimes the lay volleyball fan likens serving in volleyball to shooting a free throw in basketball. It’s a “free point”. It’s just you and the ball. Part of that statement is certainly true. It is just you and the ball. Unlike a made free throw, however, a volleyball player can nail a nasty serve to the intended target, but the other team can still side out and win the point.\nI struggled with equating serving to types of plays in other sports when I discussed this with people who were new to volleyball or casually followed it. Then I heard how former Oregon coach Jim Moore described it. Serving is more like an aggressive man defense in basketball. Occasionally you’ll get beat backdoor by it (missed serves), but the long-term goal is to wear the other team down and make them second guess themselves (knocking the other team out-of-system).\nThe game has evolved where just getting the ball “over and in” no longer works.\nOK, fair enough. But then what does an acceptable number of service errors look like? The answer might surprise you.\nThe first question is what’s the current serving trend across all NCAA Division I teams from the 2019-2024 season?\nLet’s take a look.\nAnd remember, the 2020 season is an anomaly because of COVID and teams played vastly different amounts of games (some teams didn’t even play a single game). In addition, the 2024 data is incomplete as every team had played less than 20 games at the time this data was acquired.\n\n\nCode\n#load in the data\nserves &lt;- read.csv(\"data/derek_aces_errors.csv\")\n\n#create a new field called service_error_ptPct for later use\nserve_info &lt;- serves |&gt;\n  group_by(team_name, season)|&gt;\n  mutate(\n   service_error_ptPct=service_errors/(points_played-points_won)*100\n  )|&gt;\narrange(desc(service_error_ptPct))\n\n#make a new data frame called serve_table to find the average aces and errors for each season\nserve_table &lt;- serves|&gt;\n  group_by(season)|&gt;\n  drop_na()|&gt;\n  summarise(\n    ace_average=mean(aces),\n    errors=mean(service_errors)\n  )\n\n\n\n\nCode\n#table for average aces and errors for last 6 years\nserve_table |&gt;\n  gt()|&gt;\n  cols_label(\n    ace_average = \"Avg. Aces\",\n    errors = \"Avg. Errors\",\n    season = \"Season\"\n  ) |&gt;\n  tab_header(\n    title = \"Teams are serving more aggressively\",\n    subtitle = \"Stunning increase in aces and errors in 2022\"\n    )|&gt;\n   tab_style(\n    style = cell_text(color = \"black\", weight = \"bold\", align = \"left\"),\n    locations = cells_title(\"title\")\n    ) |&gt;\n  tab_style(\n    style = cell_text(color = \"black\", align = \"left\"),\n    locations = cells_title(\"subtitle\")\n  )|&gt;\n  tab_source_note(\n    source_note = md(\"**By** Derek Harrington  &lt;br&gt;**Data courtesy of** Evollve.net&lt;br&gt; *2020 was COVID; 2024 doesn't represent full season\"))|&gt;\n   tab_style(\n    locations = cells_column_labels(columns = everything()),\n    style = list(\n      cell_borders(sides = \"bottom\", weight = px(3)),\n      cell_text(weight = \"bold\", size = 10)))|&gt;\n   cols_align(\n    align = \"left\",\n    columns = season\n  )|&gt;\n  \n    opt_row_striping() |&gt;\n  opt_table_lines(\"none\") |&gt;\n  fmt_number(\n    columns = c(ace_average, errors),\n    decimals = 0)|&gt;\n  tab_style(\n    style = list(\n      cell_fill(color = \"white\"),\n      cell_text(color = \"darkgreen\", weight=\"bold\")\n    ),\n    locations = cells_body(\n      rows = season == \"2022\"\n    ))\n\n\n\n\n\n\n\n\n\n\n\n\n\nTeams are serving more aggressively\n\n\nStunning increase in aces and errors in 2022\n\n\nSeason\nAvg. Aces\nAvg. Errors\n\n\n\n\n2019\n145\n214\n\n\n2020\n72\n102\n\n\n2021\n148\n205\n\n\n2022\n161\n217\n\n\n2023\n164\n226\n\n\n2024\n99\n141\n\n\n\nBy Derek Harrington Data courtesy of Evollve.net *2020 was COVID; 2024 doesn’t represent full season\n\n\n\n\n\n\n\n\nThe first thing that jumps out (after eliminating the 2020 season) is that both aces and errors are increasing nearly every year. The lone exception was 2021 which had a slight dip in errors compared to the 2019 season. But look at the difference between 2021 and 2022 in both aces and errors. They both rocketed.\nThe average number of aces…. across ALL NCAA Division I teams…. increased by 13! Remember, this is an average, so an increase of 13 is stunning. Not surprisingly, the number of errors also rose dramatically, by 12 errors per team.\nThe 2023 season still had an increase in aces, although it was a modest three this time. However, teams had an increase of nearly nine more errors. It will be interesting to see if the overall trend has continued with the final 2024 numbers.\n\nDo service errors equal losses?\nWell OK. So, aces and errors are increasing. That’s probably coming from some mid-majors or tiny colleges and universities that win maybe five games a year, right? I admit, that’s a reasonable guess.\nSo, let’s change the focus to teams from the Power Five (or four for 2024) conferences. Specifically, let’s look at where the Final Four teams from the 2019-2023 seasons fall. I’m not going to include 2020. Nothing personal, but the data is a mess because of the wild variance in matches played. Let’s throw in the 2024 season as a comparison and use the four teams who have been in the top four for the majority of the season.\nIf you’ve never heard of a bubble chart before, it’s not too complicated, but it does need some explanation. First, I’m comparing a team’s aces (on the y-axis) to its service errors for that season (on the x-axis). The “bubble” represents how many matches the team won that year. So, the bigger the bubble, the more wins the team had. The smaller, well you get the idea. I also included the average number of aces (horizontal line) and errors (vertical line) for each year across all Division I teams.\nBefore you look, what do you expect to see? Are teams that are higher-error the perennial powers? Or are those teams low error and racking up the aces?\n\n\nCode\n#find the max and min in aces and service errors for power five teams from 2019-2024 for limits on graphs\npowerfive &lt;- c(\"SEC\", \"Big Ten\",\"ACC\", \"Big 12\", \"Pac-12\")\nserves |&gt;\n  group_by(season)|&gt;\nfilter (conference %in% powerfive)|&gt; slice_min(aces, n = 1)|&gt;\n select(team_name,aces, season)\n\n\nserves |&gt;\n   group_by(season)|&gt;\nfilter (conference %in% powerfive)|&gt; slice_max(aces, n = 1)|&gt;\n select(team_name,aces, season)\n\nserves |&gt;\n     group_by(season)|&gt;\nfilter (conference %in% powerfive)|&gt; slice_max(service_errors, n = 1)|&gt;\n select(team_name,service_errors, season)\n\nserves |&gt;\n     group_by(season)|&gt;\nfilter (conference %in% powerfive)|&gt; slice_min(service_errors, n = 1)|&gt;\n select(team_name,service_errors, season)\n\n\n\n\nCode\n#2019 Final Four; create new dataframes for the  2019 Final Four teams\nmin19 &lt;- serves |&gt; filter(season==\"2019\",team_name==\"Minnesota\")\n\nstan19&lt;- serves |&gt;\n  filter(season==\"2019\",team_name==\"Stanford\")\n\nwis19 &lt;-serves |&gt;\n  filter(season==\"2019\",team_name==\"Wisconsin\")\n\nbay19&lt;- serves |&gt;\n  filter(season==\"2019\",team_name==\"Baylor\")\npowerfive &lt;- c(\"SEC\", \"Big Ten\",\"ACC\", \"Big 12\", \"Pac-12\")\nbubble19 &lt;- serves|&gt;\nfilter(season==\"2019\",conference%in%powerfive )\n  plot19 &lt;-ggplot() +\n   geom_point(\n    data = bubble19, \n    aes(x = service_errors, \n        y = aces, size=matches_won),alpha = .3, color=\"grey\") +\n    labs(\n      x=\"\"\n    )+\n    geom_point(\n      data=min19,\n      aes(x=service_errors,\n          y=aces, size=matches_won), color=\"#7a0019\")+\n    geom_point(\n      data=stan19,\n      aes(x=service_errors,\n          y=aces, size=matches_won), color=\"#8C1515\")+\n        geom_point(\n      data=wis19,\n      aes(x=service_errors,\n          y=aces, size=matches_won), color=\"#C5050C\")+\n      geom_point(\n      data=bay19,\n      aes(x=service_errors,\n          y=aces, size=matches_won), color=\"#154734\")+\n    labs(\n      x=\"\",\n      y=\"\"\n    )+\n       annotate(\n    \"label\", \n    x =280, \n    y = 100, \n    label = \"2019\", size=5\n  )+\n  geom_text_repel(\n    data = min19, \n    aes(\n      x = service_errors, \n      y = aces, \n      label = team_name, size=10), nudge_y = 12)+\n     geom_text_repel(\n    data = stan19, \n    aes(\n      x = service_errors, \n      y = aces, \n      label = team_name, size=10), nudge_y = 12)+\n     geom_text_repel(\n    data = wis19, \n    aes(\n      x = service_errors, \n      y = aces, \n      label = team_name, size=10),nudge_y = 8)+\n     geom_text_repel(\n    data = bay19, \n    aes(\n      x = service_errors, \n      y = aces, \n      label = team_name, size=10), nudge_x = 15)+\n      geom_vline(xintercept = 214.1672) + \n  geom_hline(yintercept = 145.409)+\n    theme_minimal()\n  \n\n\n  \n  \n  \n  \n  \n  \n  #2021 Final Four; create new dataframes for the 2021 Final Four teams\n  neb21 &lt;- serves |&gt; filter(season==\"2021\",team_name==\"Nebraska\")\n\nPitt21&lt;- serves |&gt;\n  filter(season==\"2021\",team_name==\"Pittsburgh\")\n\nwis21 &lt;-serves |&gt;\n  filter(season==\"2021\",team_name==\"Wisconsin\")\n\nlou21&lt;- serves |&gt;\n  filter(season==\"2021\",team_name==\"Louisville\")\npowerfive &lt;- c(\"SEC\", \"Big Ten\",\"ACC\", \"Big 12\", \"Pac-12\")\nbubble21 &lt;- serves|&gt;\nfilter(season==\"2021\",conference%in%powerfive )\n   plot21 &lt;- ggplot() +\n  geom_point(\n    data = bubble21, \n    aes(x = service_errors, \n        y = aces, size=matches_won),alpha = .3, color=\"grey\") +\n    geom_point(\n      data=neb21,\n      aes(x=service_errors,\n          y=aces, size=matches_won ),color=\"#E41C38\")+\n    geom_point(\n      data=Pitt21,\n      aes(x=service_errors,\n          y=aces, size=matches_won), color=\"#003594\")+\n        geom_point(\n      data=wis21,\n      aes(x=service_errors,\n          y=aces, size=matches_won), color=\"#C5050C\")+\n      geom_point(\n      data=lou21,\n      aes(x=service_errors,\n          y=aces, size=matches_won), color=\"#AD0000\")+\n     labs(\n       x=\"\",\n       y=\"\"\n     )+\n       annotate(\n    \"label\", \n    x =300, \n    y = 110, \n    label = \"2021\", size=5\n  )+\n  geom_text_repel(\n    data = neb21, \n    aes(\n      x = service_errors, \n      y = aces, \n      label = team_name, size=10), nudge_y = -7, nudge_x = -15)+\n     geom_text_repel(\n    data = Pitt21, \n    aes(\n      x = service_errors, \n      y = aces, \n      label = team_name, size=10), nudge_y = 13, nudge_x = 10)+\n     geom_text_repel(\n    data = wis21, \n    aes(\n      x = service_errors, \n      y = aces, \n      label = team_name, size=10), nudge_x = 15)+\n     geom_text_repel(\n    data = lou21, \n    aes(\n      x = service_errors, \n      y = aces, \n      label = team_name, size=10), nudge_y = 10, nudge_x = -23)+\n      geom_vline(xintercept = 204.5647) + \n  geom_hline(yintercept = 148.0618)+\n    theme_minimal()+\n    theme(\n       panel.grid.minor = element_blank()\n    )\n   \n   \n   \n   \n   \n   \n   #2022 Final Four; create new dataframes for 2022 Final Four teams\n  tex22 &lt;- serves |&gt; filter(season==\"2022\",team_name==\"Texas\")\n\nPitt22&lt;- serves |&gt;\n  filter(season==\"2022\",team_name==\"Pittsburgh\")\n\nsan22 &lt;-serves |&gt;\n  filter(season==\"2022\",team_name==\"San Diego\")\n\nlou22&lt;- serves |&gt;\n  filter(season==\"2022\",team_name==\"Louisville\")\npowerfive &lt;- c(\"SEC\", \"Big Ten\",\"ACC\", \"Big 12\", \"Pac-12\")\nbubble22 &lt;- serves|&gt;\nfilter(season==\"2022\",conference%in%powerfive )\n  plot22 &lt;- ggplot() +\n  geom_point(\n    data = bubble22, \n    aes(x = service_errors, \n        y = aces, size=matches_won),alpha = .3, color=\"grey\") +\n    scale_size(range = c(2, 8), name=\"Season wins\")+\n    geom_point(\n      data=tex22,\n      aes(x=service_errors,\n          y=aces, size=matches_won), color=\"#bf5700\")+\n    geom_point(\n      data=Pitt22,\n      aes(x=service_errors,\n          y=aces, size=matches_won), color=\"#003594\")+\n        geom_point(\n      data=san22,\n      aes(x=service_errors,\n          y=aces, size=matches_won), color=\"#84bce8\")+\n      geom_point(\n      data=lou22,\n      aes(x=service_errors,\n          y=aces, size=matches_won), color=\"#AD0000\")+\n    labs(\n      x=\"\"\n    )+\n      annotate(\n    \"label\", \n    x =330, \n    y = 110, \n    label = \"2022\", size=5\n  )+\n  geom_text_repel(\n    data = tex22, \n    aes(\n      x = service_errors, \n      y = aces, \n      label = team_name, size=9), nudge_y = 15, nudge_x = -15)+\n     geom_text_repel(\n    data = Pitt22, \n    aes(\n      x = service_errors, \n      y = aces, \n      label = team_name, size=9), nudge_y = -15)+\n     geom_text_repel(\n    data = san22, \n    aes(\n      x = service_errors, \n      y = aces, \n      label = team_name, size=9),nudge_x = 70)+\n     geom_text_repel(\n    data = lou22, \n    aes(\n      x = service_errors, \n      y = aces, \n      label = team_name,size=9), nudge_y = 15)+\n     labs(\n       y=\"Amount of aces in season\",\n     )+\n     geom_vline(xintercept = 217.4812   ) + \n  geom_hline(yintercept = 161.0435)+\n    theme_minimal()\n  \n  \n  \n  \n  \n  #2023 Final Four; create new dataframes for 2023 Final Four teams\n  tex23 &lt;- serves |&gt; filter(season==\"2023\",team_name==\"Texas\")\n\nPitt23&lt;- serves |&gt;\n  filter(season==\"2023\",team_name==\"Pittsburgh\")\n\nneb23 &lt;-serves |&gt;\n  filter(season==\"2023\",team_name==\"Nebraska\")\n\nwis23&lt;- serves |&gt;\n  filter(season==\"2023\",team_name==\"Wisconsin\")\npowerfive &lt;- c(\"SEC\", \"Big Ten\",\"ACC\", \"Big 12\", \"Pac-12\")\nbubble23 &lt;- serves|&gt;\nfilter(season==\"2023\",conference%in%powerfive )\n  plot23 &lt;- ggplot() +\n  geom_point(\n    data = bubble23, \n    aes(x = service_errors, \n        y = aces, size=matches_won),alpha = .3, color=\"grey\") +\n    geom_point(\n      data=tex23,\n      aes(x=service_errors,\n          y=aces, size=matches_won), color=\"#bf5700\")+\n    geom_point(\n      data=Pitt23,\n      aes(x=service_errors,\n          y=aces, size=matches_won), color=\"#003594\")+\n        geom_point(\n      data=neb23,\n      aes(x=service_errors,\n          y=aces, size=matches_won), color=\"#E41C38\")+\n      geom_point(\n      data=wis23,\n      aes(x=service_errors,\n          y=aces, size=matches_won), color=\"#C5050C\")+\n      annotate(\n    \"label\", \n    x =350, \n    y = 123, \n    label = \"2023\", size=5\n  )+\n  geom_text_repel(\n    data = tex23, \n    aes(\n      x = service_errors, \n      y = aces, \n      label = team_name, size=10), nudge_y = 10)+\n     geom_text_repel(\n    data = Pitt23, \n    aes(\n      x = service_errors, \n      y = aces, \n      label = team_name, size=10), nudge_y = -10,nudge_x = -10)+\n     geom_text_repel(\n    data = neb23, \n    aes(\n      x = service_errors, \n      y = aces, \n      label = team_name, size=10), nudge_x = 80,nudge_y = 15)+\n     geom_text_repel(\n    data = wis23, \n    aes(\n      x = service_errors, \n      y = aces, \n      label = team_name, size=10), nudge_x = 65)+\n    labs(\n      x=\"Amount of service errors in season\"\n    )+\n      geom_vline(xintercept = 226.3285  ) + \n  geom_hline(yintercept = 164.4942  )+\n    theme_minimal() \n  \n  \n  \n  \n  \n   \n\n#2024 for reference; create new dataframes for top 4 ranked teams\n\nPitt24 &lt;- serves |&gt; filter(season==\"2024\",team_name==\"Pittsburgh\")\n\nlou24&lt;- serves |&gt;\n  filter(season==\"2024\",team_name==\"Louisville\")\n\nneb24 &lt;-serves |&gt;\n  filter(season==\"2024\",team_name==\"Nebraska\")\n\npsu24&lt;- serves |&gt;\n  filter(season==\"2024\",team_name==\"Penn St.\")\npowerfive &lt;- c(\"SEC\", \"Big Ten\",\"ACC\", \"Big 12\", \"Pac-12\")\nbubble24 &lt;- serves|&gt;\nfilter(season==\"2024\",conference%in%powerfive )\n plot24 &lt;- ggplot() +\n  geom_point(\n    data = bubble24, \n    aes(x = service_errors, \n        y = aces, size=matches_won),alpha = .3, color=\"grey\") +\n    geom_point(\n      data=lou24,\n      aes(x=service_errors,\n          y=aces, size=matches_won), color=\"#AD0000\")+\n    geom_point(\n      data=Pitt24,\n      aes(x=service_errors,\n          y=aces, size=matches_won), color=\"#003594\")+\n        geom_point(\n      data=neb24,\n      aes(x=service_errors,\n          y=aces, size=matches_won), color=\"#E41C38\")+\n      geom_point(\n      data=psu24,\n      aes(x=service_errors,\n          y=aces, size=matches_won), color=\"#001E44\")+\n   labs(\n     x=\"\",\n     y=\"\"\n   )+\n   annotate(\n    \"label\", \n    x =210, \n    y = 70, \n    label = \"2024\", size=5\n  )+\n  geom_text_repel(\n    data = lou24, \n    aes(\n      x = service_errors, \n      y = aces, \n      label = team_name, size=7), nudge_y=-3)+\n     geom_text_repel(\n    data = Pitt24, \n    aes(\n      x = service_errors, \n      y = aces, \n      label = team_name, size=7), nudge_y=-3)+\n   \n     geom_text_repel(\n    data = neb24, \n    aes(\n      x = service_errors, \n      y = aces, \n      label = team_name, size=7), nudge_y=-5, nudge_x = -60)+\n     geom_text_repel(\n    data = psu24, \n    aes(\n      x = service_errors, \n      y = aces, \n      label = team_name, size=7), nudge_x = 30)+\n      geom_vline(xintercept = 141.4566  ) + \n  geom_hline(yintercept = 99.06358  )+\n    theme_minimal()\n \n (plot19+plot21)/(plot22+plot23+plot24)+plot_layout(axes = \"collect\")+\n   plot_annotation(\n    title = \"Good AND bad news: Final Four teams are above average servers\",\n    subtitle = \"Pittsburgh in a league of its own in 2024\",\n    caption = \"By Derek Harrington  |  Data courtesy of Evollve.net\"\n  ) &\n  theme(\n    plot.title.position=\"plot\",\n    plot.title = element_text(size = 15.5, face = \"bold\"),\n    axis.title = element_text(size = 10),\n    plot.subtitle = element_textbox_simple(size = 12),\n    panel.grid.minor = element_blank(),\n    legend.position=\"none\"\n  )\n\n\n\n\n\n\n\n\n\nThe prevailing thought is probably that Final Four teams (and teams with a lot of wins, i.e. big bubbles) are low-error with a high number of aces (this would put them in the upper-left quadrant in each graph). Or perhaps, they may not have many aces, but they also don’t beat themselves with a lot of errors (the bottom-left quadrant). What we see though is a different and interesting story. Of the 16 Final Four teams from 2019-2023 (again, not counting 2020), only three teams fall into those quadrants!\nBoth Minnesota and Baylor in 2019 were below average in aces and errors. This means they weren’t particularly tough serving teams (in terms of sheer number of aces), but they also didn’t give away a lot of free points from the service line. Neither advanced to the championship match.\nIn 2022, Pittsburgh barely fell into that upper-left quadrant where we might expect the cream-of-the-crop teams to be. Spoiler alert, Pittsburgh also lost in the semifinals that year, albeit in five sets to Louisville.\nAll the other teams, except the 2023 Nebraska team, were in the upper-right quadrant. That means they had above-average aces but also above-average service errors. So, it goes against what conventional thinking would suggest.\nInterestingly, you might expect the majority of the small bubbles (or teams with losing records) to be in the bottom-right quadrant. Meaning they served up less than the average in aces and also had more than average service errors. The 2023 Nebraska team, then, defies this logic as the Huskers only lost two games the entire season as the national runners-up. The team that won? Texas. Who was statistically the best serving team (in terms of aces and errors) at the 2023 Final Four.\nLooking at the 2024 season to date, the Pittsburgh Panthers are in a class of their own. They are hammering teams from the service line and aren’t giving away free points either. Can they keep up that pace or will they regress to the mean?\n\n\nHow many points are teams giving away?\nThis brings me to my next discussion. A popular thought is a team should miss approximately 10% of its serves. Any more and you’re being a little too aggressive and giving away too many points. Less and you’re probably not serving tough enough and having problems stopping other teams from scoring.\nWhile the data is out there to calculate if the top teams are serving at that rate, I thought it would be interesting to look at how many of the total points a team lost in a season were due to service errors. And surprise! The answer again is a little unexpected.\n\n\nCode\n#use the serving info to see what teams are being hurt by service errors in the points they don't win\nperrenial &lt;- c(\"Stanford\", \"Texas\", \"Wisconsin\", \"Louisville\", \"Pittsburgh\", \"Nebraska\", \"Penn St.\", \"Kentucky\", \"Minnesota\", \"Oregon\", \"Florida\", \"Purdue\")\nserve_er_pct &lt;- serve_info |&gt; filter(team_name %in% perrenial)|&gt;\n  arrange(desc(service_error_ptPct)) |&gt;\nselect(season, team_name, service_error_ptPct)\n\n\nff&lt;-read.csv(\"data/finalfourteams.csv\")\nff19 &lt;- ff |&gt; filter(season==\"2019\")\nff20 &lt;- ff |&gt; filter(season==\"2020\")\nff21 &lt;- ff |&gt; filter(season==\"2021\")\nff22 &lt;- ff |&gt; filter(season==\"2022\")\nff23 &lt;- ff |&gt; filter(season==\"2023\")\n\n\n#plot with facet wrap\nserve_er_pct |&gt;\n \nggplot()+ \n  geom_line(data=serve_er_pct, aes(x = season, y = service_error_ptPct, group=team_name))+\n  scale_y_continuous(limits=c(4.5,20))+\n  scale_x_continuous(breaks = c(2019, 2020, 2021, 2022, 2023, 2024), limits=c(2018.8, 2024.2))+\n  facet_wrap(~team_name)+\n  \n  geom_point(data=ff19, aes(x=season, y=service_error_ptPct), color=\"red\", size=2)+\n  geom_point(data=ff20, aes(x=season, y=service_error_ptPct), color=\"red\",size=2)+\n  geom_point(data=ff21, aes(x=season, y=service_error_ptPct), color=\"red\", size=2)+\n  geom_point(data=ff22, aes(x=season, y=service_error_ptPct), color=\"red\", size=2)+\n  geom_point(data=ff23, aes(x=season, y=service_error_ptPct), color=\"red\", size=2)+\n  \n labs(\n    title = \"Top teams lose notable amount of points via service errors\",\n    subtitle = \"Purdue bucks this trend, but hasn't made a &lt;span style = 'color:red;'&gt;Final Four&lt;/span&gt;\",\n    y = \"% of total points lost by service errors\", x = \"Season\",\n    caption = \"By: Derek Harrington  |  Data courtesy of Evollve.net\"\n  ) +\n theme_minimal() +\n  theme(\n    plot.title.position = \"plot\",\n    plot.title = element_text(size = 17.5, face = \"bold\"),\n    plot.subtitle = element_textbox_simple(size = 12),\n    axis.title = element_text(size = 9),\n    panel.grid.minor = element_blank(),\n    axis.text.x = element_text(angle = 60, hjust = 1))\n\n\n\n\n\n\n\n\n\nThis graph shows the amount (in a percentage) of the total points lost in a season due to missed serves. So, for example, let’s say Florida lost a hypothetical 1,000 points in 2019. The value of the y-axis for Florida for 2019 is about 10%. This would mean that of those 1,000 points that Florida lost, 100 of them were missed serves.\nFor this graph, I used teams that have consistently been in or around the top 10 for the comparisons. It’s interesting that Purdue historically hasn’t given teams anything free from the service line, but the Boilermakers haven’t been to a Final Four (although they’ve been tantalizingly close). Could this be a hint that they need to serve a bit more aggressively? Maybe.\nThe other notable thing is EVERY Final Four team (except Pittsburgh in 2022) gave up between 10-15% of its points due to service errors. That seems like a large amount, but again, the trade-off for service errors is getting the other team out-of-system and giving your team opportunities to score.\n\n\nTakeaway\nSo, what’s the lesson here? Clearly, the simplistic “get the ball over and in” and “serving is like shooting free throws” mantras don’t work anymore. Teams are going for it behind the service line and racking up the aces…and errors. And there are numerous reasons for that.\nThe parity across Division I is remarkable. Look back even 15 years ago and the list of teams that had a legitimate shot to win a national championship was maybe five teams max. Now that list has expanded to 10 possible teams in any given year.\nPassing is continuously improving from year to year. There are more players at an elite passing level than there were in the past, and that’s a testament to the training being received in clubs and high schools. You have to serve more aggressively if you want to knock other teams out-of-system.\nOffenses are also evolving at a rapid pace. Gone are the days of the high “moon-ball” offenses. Now coaches want to run their offense at lightning-quick tempo and use the athleticism of their players to beat the blocks and defenses. And I’m not complaining, it’s fun to see the sport evolve, and these offenses are quite entertaining. However, the way to combat them is extremely tough serving, and that means more service errors.\nThere are other reasons as well, but these are probably the main ones that explain the shift in mentality regarding service errors. Also, remember that only aces and errors show up in a box score. Or at least, ones available to the public. Many serves don’t show up as aces that are just as effective. This helps keep service errors in some perspective.\nSo, the next time there’s a missed serve, maybe don’t make that groan so audible, and remember that there’s a bigger strategy in play. However, let’s try to not miss those serves when it’s 13 all in the fifth set."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "DereksSportsBlog",
    "section": "",
    "text": "Hitting percentage: the end all be all?\n\n\n\n\n\n\nNCAA\n\n\noffense\n\n\ncollege volleyball\n\n\n\n\n\n\n\n\n\nDec 9, 2024\n\n\nDerek Harrington\n\n\n\n\n\n\n\n\n\n\n\n\nThe anatomy of the service error\n\n\n\n\n\n\nNCAA serving\n\n\nvolleyball\n\n\n\n\n\n\n\n\n\nNov 17, 2024\n\n\nDerek Harrington\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "Hi! My name is Derek Harrington, and I’m a University of Nebraska - Lincoln senior. I’m working on my bachelor’s of journalism with a major in sports media and communications. I like a variety of sports, but volleyball is my passion."
  },
  {
    "objectID": "posts/ncaa-volleyball-offense-analysis-2022-2023/index.html",
    "href": "posts/ncaa-volleyball-offense-analysis-2022-2023/index.html",
    "title": "Hitting percentage: the end all be all?",
    "section": "",
    "text": "Code\n#load libraries\nlibrary(tidyverse)\nlibrary(gt)\nlibrary(ggrepel)\n\n\nIt’s an exciting time for volleyball in the United States. The sport has been improving rapidly for the last 10-15 years, especially on the offensive side of the equation. Players are more athletic, dynamic and better trained coming into college. As a result, teams can push the boundaries of creativity in offensive schemes. But what teams are improving their offenses? Are there decent, but not great, offensive teams that still win a lot of games? Let’s explore.\nFirst of all, I make no secret that I’m a Nebraska and Big Ten fan. So, to begin this exploration I’ll be looking at Nebraska and the Big Ten conference. However, my analysis will expand to the rest of the country (with comparisons to Nebraska made along the way).\n\nWho’s the offensive juggernaut in the Big Ten?\nTo begin, let’s look at how Big Ten offenses fared between 2022 and 2023. This first chart simply displays the change in season hitting percentages from each Big Ten member between the 2022 and 2023 seasons. And if you’re not quite sure what a hitting percentage in volleyball is, it’s an efficiency that’s calculated by taking (your kills- your errors)/your total attempts.\n\n\nCode\n#load in the data\noffense &lt;- read_csv(\"data/derek_offense.csv\")\n\n#make a slope chart for 2022 and 2023 offenses\n#first make some vectors to be used later on\nbig_ten &lt;- c(\"Nebraska\",\"Wisconsin\",\"Penn St.\", \"Michigan\", \"Michigan St.\", \"Iowa\", \"Purdue\", \"Illinois\", \"Minnesota\", \"Ohio St.\", \"Maryland\", \"Rutgers\", \"Northwestern\", \"Indiana\")\n\nbig_ten_offense &lt;- offense |&gt;\n  group_by(team_name, season)|&gt;\n  filter(team_name %in% big_ten)|&gt;\n  summarise(\n    totalkills=sum(kills),\n    totalerrors=sum(attack_errors),\n    totalattempts=sum(attacks)\n  )|&gt;\n  mutate(\n    hit_pct=(totalkills-totalerrors)/totalattempts\n  )|&gt;\n  select(\n    team_name, hit_pct, season\n  )\n \n  nu &lt;- big_ten_offense |&gt; filter(team_name==\"Nebraska\")\n  wis &lt;- big_ten_offense |&gt; filter(team_name==\"Wisconsin\")\n  ind &lt;- big_ten_offense |&gt; filter(team_name==\"Indiana\")\n  mich &lt;- big_ten_offense |&gt; filter (team_name==\"Michigan\")\n  ggplot() + \n  geom_line(\n    data = big_ten_offense, \n    aes(\n      x = season, \n      y = hit_pct, \n      group = team_name\n    ), \n    color=\"grey\")+\n  geom_point(\n    data = big_ten_offense, \n    aes(\n      x = season, \n      y = hit_pct, \n      group = team_name\n    ), \n    color=\"grey\"\n  )+\n    geom_line(\n    data = nu, \n    aes(\n      x = season, \n      y = hit_pct, \n      group = team_name\n    ), \n    color=\"black\")+\n  geom_point(\n    data = nu, \n    aes(\n      x = season, \n      y = hit_pct, \n      group = team_name\n    ), \n    color=\"black\"\n  )+\n    geom_line(\n    data = wis, \n    aes(\n      x = season, \n      y = hit_pct, \n      group = team_name\n    ), \n    color=\"#C5050C\")+\n  geom_point(\n    data = wis, \n    aes(\n      x = season, \n      y = hit_pct, \n      group = team_name\n    ), \n    color=\"#C5050C\"\n  )+\n    geom_line(\n    data = ind, \n    aes(\n      x = season, \n      y = hit_pct, \n      group = team_name\n    ), \n    color=\"#990000\")+\n  geom_point(\n    data = ind, \n    aes(\n      x = season, \n      y = hit_pct, \n      group = team_name\n    ), \n    color=\"#990000\"\n  )+\n    geom_line(\n    data = mich, \n    aes(\n      x = season, \n      y = hit_pct, \n      group = team_name\n    ), \n    color=\"#00274c\")+\n  geom_point(\n    data = mich, \n    aes(\n      x = season, \n      y = hit_pct, \n      group = team_name\n    ), \n    color=\"#00274c\"\n  )+\n  scale_x_continuous(\n    breaks=c(2022, 2023), \n    limits=c(2021.75, 2023.25)\n  ) +\n    scale_y_continuous(\n      breaks=c(.175, .200, .225, .250, .275, .300, .325)\n    )+\n  geom_text(\n    data = nu |&gt; filter(season == max(season)),\n    aes(\n      x = season + .1, \n      y = hit_pct , \n      group = team_name, \n      label = team_name\n    ))+\n  geom_text(\n    data = nu |&gt; filter(season == min(season)),\n    aes(\n      x = season - .1, \n      y = hit_pct, \n      group = team_name, \n      label = team_name\n    ))+\n  geom_text(\n    data = wis |&gt; filter(season == max(season)),\n    aes(\n      x = season + .1, \n      y = hit_pct , \n      group = team_name, \n      label = team_name\n    ))+\n  geom_text(\n    data = wis |&gt; filter(season == min(season)),\n    aes(\n      x = season - .1, \n      y = hit_pct, \n      group = team_name, \n      label = team_name\n    ))+\n  geom_text(\n    data = ind |&gt; filter(season == max(season)),\n    aes(\n      x = season + .1, \n      y = hit_pct , \n      group = team_name, \n      label = team_name\n    ))+\n  geom_text(\n    data = ind |&gt; filter(season == min(season)),\n    aes(\n      x = season - .1, \n      y = hit_pct, \n      group = team_name, \n      label = team_name\n    ))+\n  geom_text(\n    data = mich |&gt; filter(season == max(season)),\n    aes(\n      x = season + .1, \n      y = hit_pct , \n      group = team_name, \n      label = team_name\n    ))+\n  geom_text(\n    data = mich |&gt; filter(season == min(season)),\n    aes(\n      x = season - .1, \n      y = hit_pct, \n      group = team_name, \n      label = team_name\n    ))+\n    theme_minimal()+\n  labs(\n    x= \"Season\",\n    y = \"Hitting Percentage\", \n    title = \"Wisconsin continues to dominate offensivley in Big Ten\",\n    subtitle = \"Michigan had a bad year one after coacing change\",\n    caption=\"Data courtesy of Evollve.net | By Derek Harrington\"\n  ) +\n  theme(\n    plot.title = element_text(size = 16, face = \"bold\"),\n    plot.subtitle = element_text(size = 12),\n    axis.title = element_text(size = 10),\n    panel.grid.minor = element_blank(),\n    plot.title.position = \"plot\"\n  )\n\n\n\n\n\n\n\n\n\nSo, what to make of this? Well, first of all, Wisconsin was the national champion in 2021. They lost many key pieces from that team including Dana Rettke and Sydney Hilley. And yet, they were still atop the Big Ten in 2022 in terms of hitting percentage, and to no one’s surprise, they won the conference title. The Huskers switched to a 6-2 offense in 2022 and the offensive numbers were up from 2021. If not for a crippling injury in the last week of the regular season that forced some lineup changes, Nebraska may have been able to win the conference title. But I digress. The interesting story comes in 2023 in my opinion.\nAs the chart shows, Wisconsin improved its offense from 2022 to 2023, hitting over .300 as a team! The Badgers were no doubt among the elite offensive teams across the country. We can also see that Nebraska made a sizable jump, thanks to newcomers that included Merritt Beason, Harper Murray, Andi Jackson and Bergen Reilly (among many other important pieces). This chart would suggest that Wisconsin still ran away with the conference title as there’s a sizable gap between the Huskers and Badgers offensively.\nBut….Nebraska actually won the conference title. Nebraska was the nation’s best defensive team last year, and that paired with the offensive improvement led to the Huskers claiming the Big Ten title outright. It’s also only fair to point out that Wisconsin had a couple of injuries toward the end of the year that allowed Purdue and Penn State to knock off the Badgers, allowing the Huskers to claim the title. Nevertheless, it’s a prime example of offense not always being the main story. So, if Nebraska won the conference in 2023 and had a chance to win it in 2022, but it wasn’t close to touching Wisconsin in team hitting percentage,so there’s something else there, but what?\nAlso note that Indiana made a huge improvement with its offense, which put the Hoosiers in contention for an at-large bid to the NCAA tournament. Unfortunately, the Hoosiers dropped some games early in the non-conference and late in the season that kept them out. Michigan had a rough year with a coaching change and roster turnover. However, if you were to compare the Wolverines’ 2023 numbers to those of 2024, you’d see a big improvement.\n\n\nWhat teams actually earn their points?\nSo, let’s take this examination up a level and look at the 2022 and 2023 seasons in a different light. Let’s examine the top 10 (using the end-of-year top 10 rankings) for each year and see how they fared with points earned and points given up.\nIn the most simplistic terms, the points per set a team earns is the addition of the kills per set, aces per set and blocks per set. Typically, you’d want to be in the range of 17 to 18 earned points per set to be considered elite. Points given up is the summation of all of your errors (hitting, serving, ball handling and block errors). Obviously with points given up you want to be as low as possible. So, let’s take a look for both 2022 and 2023.\n\n\nCode\n#|message: FALSE\n\n#make some more vectors with teams from the power 5 conferences \n\nsec &lt;- c(\"Florida\", \"Kentucky\", \"Missouri\", \"Alabama\", \"Arkansas\", \"Georgia\", \"Ole Miss\", \"Miss St.\", \"Tennessee\", \"South Carolina\", \"LSU\", \"Texas A&M\", \"Auburn\")\npac_12 &lt;- c(\"Stanford\", \"Oregon\", \"UCLA\", \"USC\", \"Arizona\", \"Arizona St.\", \"Colorado\", \"Utah\", \"Oregon St.\", \"Washington\", \"Washington St.\", \"California\")\nbig_12_22 &lt;- c(\"Texas\", \"Iowa St.\", \"Kansas\", \"Kansas St.\", \"Baylor\", \"Oklahoma\", \"TCU\", \"Texas Tech\", \"West Virginia\")\nbig_12_23 &lt;- c(\"Texas\", \"Iowa St.\", \"Kansas\", \"Kansas St.\", \"Baylor\", \"Oklahoma\", \"TCU\", \"Texas Tech\", \"Weest Virginia\", \"BYU\", \"UCF\", \"Houston\", \"Cincinnati\")\nacc &lt;- c(\"Pittsburgh\", \"Florida St.\", \"Miami\", \"Clemson\", \"NC State\", \"Boston College\", \"Louisville\", \"Notre Dame\", \"Syracuse\", \"Duke\", \"North Carolina\", \"Wake Forest\", \"Georgia Tech\", \"Virginia\", \"Virginia Tech\" )\n\npower5_22 &lt;- c(big_ten, sec, pac_12,big_12_22, acc)\npower5_23 &lt;- c(big_ten, sec, pac_12,big_12_23, acc)\n\ntop_ten22 &lt;- c(\"Texas\", \"Louisville\", \"San Diego\", \"Pittsburgh\", \"Wisconsin\", \"Stanford\", \"Oregon\", \"Ohio St.\", \"Nebraska\", \"Minnesota\")\n\ntop_ten23 &lt;- c(\"Texas\", \"Nebraska\", \"Wisconsin\", \"Pittsburgh\", \"Stanford\", \"Louisville\", \"Oregon\", \"Arkansas\", \"Tennessee\", \"Kentucky\")\n\noffense_earned_given_22 &lt;- offense |&gt;\n  \n   select(\n    team_name,\n    season,\n    aces,\n    kills,\n    sets_won,\n    sets_lost,\n    block_solos,\n    block_assists,\n    block_errors,\n    service_errors,\n    attack_errors,\n    ball_handling_errors\n  ) |&gt;\n  filter(season==\"2022\")|&gt;\n  group_by(team_name) |&gt;\n  drop_na()|&gt;\n  summarize(\n    total_sets = sum(sets_won+ sets_lost),\n    earned_pts = sum(aces + kills +(block_solos + (block_assists/2))),\n    pts_given = sum(service_errors + attack_errors +block_errors+ball_handling_errors)\n  ) |&gt;\n  mutate(\n    earned_pts_set = earned_pts/total_sets,\n    given_pts_set= pts_given/total_sets \n\n  ) |&gt;\n  rename(Team = team_name) |&gt;\n  select(Team, earned_pts_set, given_pts_set) |&gt;\n  filter(Team %in% top_ten22)|&gt;\n  arrange(desc(earned_pts_set))\n\noffense_earned_given_23 &lt;- offense |&gt;\n  \n   select(\n    team_name,\n    season,\n    aces,\n    kills,\n    sets_won,\n    sets_lost,\n    block_solos,\n    block_assists,\n    block_errors,\n    service_errors,\n    attack_errors,\n    ball_handling_errors\n  ) |&gt;\n  filter(season==\"2023\")|&gt;\n  group_by(team_name) |&gt;\n  drop_na()|&gt;\n  summarize(\n    total_sets = sum(sets_won+ sets_lost),\n    earned_pts = sum(aces + kills +(block_solos + (block_assists/2))),\n    pts_given = sum(service_errors + attack_errors +block_errors+ball_handling_errors)\n  ) |&gt;\n  mutate(\n    earned_pts_set = earned_pts/total_sets,\n    given_pts_set= pts_given/total_sets \n\n  ) |&gt;\n  rename(Team = team_name) |&gt;\n  select(Team, earned_pts_set, given_pts_set) |&gt;\n  filter(Team %in% top_ten23)|&gt;\n  arrange(desc(earned_pts_set))\n\n\n\n#make a table for 22 pts/earned per set\n\n offense_earned_given_22 |&gt;\n  gt()|&gt;\n  cols_label(\n    earned_pts_set=\"Earned Pts/set\",\n    given_pts_set=\"Errors/set\"\n  )|&gt;\n  tab_header(\n    title = \"Stanford had no problems scoring against teams in 2022\",\n    subtitle = \"Texas didn't gift many points\"\n  )|&gt;\n   tab_style(\n    style = cell_text(color = \"black\", weight = \"bold\", align = \"left\"),\n    locations = cells_title(\"title\")\n  ) |&gt;\n  tab_style(\n    style = cell_text(color = \"black\", align = \"left\"),\n    locations = cells_title(\"subtitle\")\n  )|&gt;\n  tab_source_note(\n    source_note = md(\"By **Derek Harrington**  &lt;br&gt;Data courtesy of **Evollve.net**\"))|&gt;\n   tab_style(\n    locations = cells_column_labels(columns = everything()),\n    style = list(\n      cell_borders(sides = \"bottom\", weight = px(3)),\n      cell_text(weight = \"bold\", size = 12)))|&gt;\n    opt_row_striping() |&gt;\n  opt_table_lines(\"none\") |&gt;\n  fmt_number(\n    columns = c(earned_pts_set, given_pts_set),\n    decimals = 2)|&gt;\n  tab_style(\n    style = list(\n      cell_fill(color = \"white\"),\n      cell_text(color = \"darkgreen\", weight=\"bold\")\n    ),\n    locations = cells_body(\n      rows = Team == \"Texas\"\n    ))|&gt;\n      tab_style(\n    style = list(\n      cell_fill(color = \"white\"),\n      cell_text(color = \"red\", weight=\"bold\")\n    ),\n    locations = cells_body(\n      rows = Team == \"Nebraska\"\n    \n  ))\n\n\n\n\n\n\n\n\n\n\n\n\n\nStanford had no problems scoring against teams in 2022\n\n\nTexas didn't gift many points\n\n\nTeam\nEarned Pts/set\nErrors/set\n\n\n\n\nStanford\n18.84\n7.79\n\n\nTexas\n18.68\n6.50\n\n\nWisconsin\n18.00\n7.16\n\n\nSan Diego\n17.87\n6.79\n\n\nPittsburgh\n17.72\n7.06\n\n\nLouisville\n17.66\n7.20\n\n\nOhio St.\n17.46\n7.64\n\n\nMinnesota\n17.40\n6.77\n\n\nOregon\n17.30\n7.29\n\n\nNebraska\n16.63\n7.76\n\n\n\nBy Derek Harrington Data courtesy of Evollve.net\n\n\n\n\n\n\n\n\nWhat’s the story here? First of all, the thing jumping off the page to me is Stanford was earning nearly 19 points a set which is truly outstanding. However, they also led the top 10 in points given away per set. Perhaps that’s one of the reasons why San Diego was able to upset the Cardinal in the regional final at Stanford. Both teams were tremendous in 2022, but on average, San Diego didn’t give away as many points as Stanford.\nTexas ranks second for total points earned per set and that’s not a surprise. That Texas team had Logan Eggleston, Madi Skinner and Asjia O’Neal as its go-to hitters. They were truly a great offensive team AND they also didn’t gift you many free points. If you lined up against the Longhorns, you were going to have to earn every point.\nNebraska ranks last for earned points per set, which is a bit surprising considering the 6-2 had improved its offense over 2022. The final numbers may have been impacted somewhat by the changes in personnel due to the injury, but I’m not sure it would make that big of a difference. The 2022 Huskers were also giving away far too many points to other teams, ranking second just behind Stanford.\nSo, recalling Nebraska’s offensive jump from 2022 to 2023, did the Huskers make a significant jump in the 2023 standings?\n\n\nCode\n offense_earned_given_23 |&gt;\n  gt()|&gt;\n   cols_label(\n    earned_pts_set=\"Earned Pts/set\",\n    given_pts_set=\"Errors/set\"\n  )|&gt;\n     tab_header(\n    title = \"Stanford continued its dominance over the field in 2023\",\n    subtitle = \"Nebraska earned more points, but Texas still won the title\"\n  )|&gt;\n   tab_style(\n    style = cell_text(color = \"black\", weight = \"bold\", align = \"left\"),\n    locations = cells_title(\"title\")\n  ) |&gt;\n  tab_style(\n    style = cell_text(color = \"black\", align = \"left\"),\n    locations = cells_title(\"subtitle\")\n  )|&gt;\n  tab_source_note(\n    source_note = md(\"By **Derek Harrington**  &lt;br&gt;Data courtesy of **Evollve.net**\"))|&gt;\n   tab_style(\n    locations = cells_column_labels(columns = everything()),\n    style = list(\n      cell_borders(sides = \"bottom\", weight = px(3)),\n      cell_text(weight = \"bold\", size = 12)))|&gt;\n    opt_row_striping() |&gt;\n  opt_table_lines(\"none\") |&gt;\n  fmt_number(\n    columns = c(earned_pts_set, given_pts_set),\n    decimals = 2)|&gt;\n  tab_style(\n    style = list(\n      cell_fill(color = \"white\"),\n      cell_text(color = \"darkgreen\", weight=\"bold\")\n    ),\n    locations = cells_body(\n      rows = Team == \"Texas\"\n    )\n  )|&gt;\n   tab_style(\n    style = list(\n      cell_fill(color = \"white\"),\n      cell_text(color = \"red\", weight=\"bold\")\n    ),\n    locations = cells_body(\n      rows = Team == \"Nebraska\"\n    ))\n\n\n\n\n\n\n\n\n\n\n\n\n\nStanford continued its dominance over the field in 2023\n\n\nNebraska earned more points, but Texas still won the title\n\n\nTeam\nEarned Pts/set\nErrors/set\n\n\n\n\nStanford\n19.02\n7.88\n\n\nTennessee\n18.71\n7.19\n\n\nWisconsin\n18.52\n6.42\n\n\nOregon\n18.29\n7.58\n\n\nPittsburgh\n18.19\n6.95\n\n\nTexas\n17.92\n6.84\n\n\nKentucky\n17.80\n7.79\n\n\nArkansas\n17.74\n7.28\n\n\nNebraska\n17.73\n7.95\n\n\nLouisville\n17.64\n7.44\n\n\n\nBy Derek Harrington Data courtesy of Evollve.net\n\n\n\n\n\n\n\n\nNope. Sure, Nebraska did improve slightly in total earned points per set, getting into the upper 17s, but there were clearly teams better at earning points than the Huskers. the Stanford did eclipse the 19 earned points per set mark in 2023. However, the Cardinal lost yet again in the regional final, at home, this time to the Texas Longhorns. Stanford losing at home in the regional final in back-to-back years, especially with how dominate they were, is quite thought-provoking.\nNebraska only slightly improved its earned points per set, and it led the top 10 teams in errors per set. And yet, the Huskers made it to the national championship and only lost two games. Texas, who knocked off Stanford, Wisconsin and Nebraska en route to the title, put together a remarkable post-season run. It’s more impressive when you consider the fact Texas faced match point in the fourth set against Tennessee in the regional semifinal. But the Longhorns prevailed over the Volunteers and weren’t seriously challenged the rest of the tournament.\nSo, there’s an element that’s still missing here. Why was Nebraska the team to beat in 2023 even though the above numbers suggest they were only slightly better than in 2022? Well….if you followed social media whenever Nebraska played in 2023 there was a common theme. It would be pointed out that it seemed teams couldn’t keep a serve in play to save their lives when they faced Nebraska. But is that really what happened?\n\n\nCode\n#make a table showing opponents errors for 2023\n#make new dataframe for Nebraska's gifts\nNebraska_gifted23 &lt;- offense |&gt;\n  filter(season==\"2023\")|&gt;\n  \n   select(\n    team_name,\n    aces,\n    kills,\n    sets_won,\n    sets_lost,\n    block_solos,\n    block_assists,\n    block_errors,\n    service_errors,\n    attack_errors,\n    ball_handling_errors,\n    opp_service_errors,\n    opp_attack_errors,\n    opp_ball_handling_errors\n  ) |&gt;\n  group_by(team_name) |&gt;\n  drop_na()|&gt;\n  summarize(\n    total_sets = sum(sets_won+ sets_lost),\n    earned_pts = sum(aces + kills +(block_solos + (block_assists/2))),\n    pts_given = sum(service_errors + attack_errors +block_errors+ball_handling_errors),\n    gift_points= sum(opp_service_errors + opp_ball_handling_errors + opp_attack_errors),\n    se_gifts=sum(opp_service_errors)\n  ) |&gt;\n  mutate(\n    earned_pts_set = earned_pts/total_sets,\n    given_pts_set= pts_given/total_sets,\n    unearned_pts_set=gift_points/total_sets,\n    SE=se_gifts\n\n  ) |&gt;\n  rename(Team = team_name) |&gt;\n  select(Team, unearned_pts_set,SE) |&gt;\n  filter(Team %in% top_ten23)|&gt;\n  arrange(desc(SE))\n\n\n#table with service errors from opponents\n\nNebraska_gifted23 |&gt;\n  gt(\n  )|&gt;\n  cols_label(\n    SE=\"Opp service errors\",\n    unearned_pts_set=\"Opp errors/set\"\n  )|&gt;\n     tab_header(\n    title = \"Nebraska's opponents were error-prone\",\n    subtitle = \"Huskers' opponents served too aggressively\"\n  )|&gt;\n   tab_style(\n    style = cell_text(color = \"black\", weight = \"bold\", align = \"left\"),\n    locations = cells_title(\"title\")\n  ) |&gt;\n  tab_style(\n    style = cell_text(color = \"black\", align = \"left\"),\n    locations = cells_title(\"subtitle\")\n  )|&gt;\n  tab_source_note(\n    source_note = md(\"By **Derek Harrington**  &lt;br&gt;Data courtesy of **Evollve.net**\"))|&gt;\n   tab_style(\n    locations = cells_column_labels(columns = everything()),\n    style = list(\n      cell_borders(sides = \"bottom\", weight = px(3)),\n      cell_text(weight = \"bold\", size = 12)))|&gt;\n    opt_row_striping() |&gt;\n  opt_table_lines(\"none\") |&gt;\n  fmt_number(\n    columns = c(Team, SE),\n    decimals = 0)|&gt;\n  tab_style(\n    style = list(\n      cell_fill(color = \"white\"),\n      cell_text(color = \"darkgreen\", weight=\"bold\")\n    ),\n    locations = cells_body(\n      rows = Team == \"Nebraska\"\n    )\n  )\n\n\n\n\n\n\n\n\n\n\n\n\n\nNebraska's opponents were error-prone\n\n\nHuskers' opponents served too aggressively\n\n\nTeam\nOpp errors/set\nOpp service errors\n\n\n\n\nNebraska\n8.735537\n325\n\n\nTexas\n8.551402\n277\n\n\nStanford\n7.300000\n269\n\n\nArkansas\n7.401575\n265\n\n\nLouisville\n7.948718\n260\n\n\nOregon\n7.928571\n260\n\n\nPittsburgh\n8.387931\n260\n\n\nKentucky\n6.916667\n230\n\n\nWisconsin\n8.260504\n227\n\n\nTennessee\n7.226415\n222\n\n\n\nBy Derek Harrington Data courtesy of Evollve.net\n\n\n\n\n\n\n\n\nYes! Whoever played Nebraska seemed to have issues with keeping the ball in play. Not only did the Huskers lead the top 10 in points gifted by the other team, but they also led in opponent service errors. The question on your mind is probably why? A logical guess would be that because Nebraska was such a good passing team in 2023 AND the Huskers had some formidable attackers, teams had to crank up the service pressure to get them out-of-system.\nThe downside to that is the amount of service errors. This makes Texas’ win in the national championship even more impressive because they served Nebraska off the court and perhaps, Nebraska didn’t know what to do when they weren’t getting the free points they were accustomed to. By all accounts, Nebraska is an even better passing team in 2024 so it would be interesting to revisit these numbers to see if there’s a similar story in 2024.\n\n\nWhat’s the missing link?\nPerhaps the best metric to look at is hitting differential, which is your hitting efficiency minus your opponent’s hitting efficiency. Hitting differentials can be examined in a couple of different ways. Let’s look at the top 10 teams in 2023 and their hitting differentials.\n\n\nCode\n#make dataframe for hitting differential \nhitting_differential_23 &lt;- offense |&gt;\n  \n   select(\n    team_name,\n    season,\n    kills,\n   attack_errors,\n   opp_kills,\n   opp_attack_errors,\n   attacks,\n   opp_attacks\n   \n  ) |&gt;\n  filter(season==\"2023\")|&gt;\n  group_by(team_name) |&gt;\n  drop_na()|&gt;\n  summarize(\n    total_kills = sum(kills),\n    total_errors = sum(attack_errors),\n    total_attempts = sum(attacks),\n    total_opp_kills = sum(opp_kills),\n    total_opp_errors = sum(opp_attack_errors),\n    total_opp_attacks = sum(opp_attacks)\n  ) |&gt;\n  mutate(\n   hitting_pct = (total_kills - total_errors)/total_attempts,\n   opponent_hit_pct = (total_opp_kills - total_opp_errors)/total_opp_attacks,\n   hit_dif = hitting_pct - opponent_hit_pct\n  \n\n  ) |&gt;\n  rename(Team = team_name) |&gt;\n  select(Team, hit_dif) |&gt;\n  filter(Team %in% top_ten23)|&gt;\n  arrange(desc(hit_dif))\n\n\n\n\nCode\nnu &lt;- hitting_differential_23 |&gt; filter (Team==\"Nebraska\")\ntex &lt;- hitting_differential_23 |&gt; filter (Team==\"Texas\")\nWis &lt;- hitting_differential_23 |&gt; filter (Team==\"Wisconsin\")\nPitt &lt;- hitting_differential_23 |&gt; filter (Team==\"Pittsburgh\")\n\nggplot() +\n  geom_bar(\n    data = hitting_differential_23, \n    aes(\n      x = reorder(Team, hit_dif), \n      weight = hit_dif,\n      alpha = .3\n    )\n  ) +\n   geom_bar(\n    data = nu, \n    aes(\n      x = reorder(Team, hit_dif), \n      weight = hit_dif),\n      fill = \"red\"\n    ) +\n   geom_bar(\n    data = tex, \n    aes(\n      x = reorder(Team, hit_dif), \n      weight = hit_dif),\n      fill=\"red\"\n    )+\n   geom_bar(\n    data =Wis, \n    aes(\n      x = reorder(Team, hit_dif), \n      weight = hit_dif),\n    fill=\"red\")+\n  \n   geom_bar(\n    data = Pitt, \n    aes(\n      x = reorder(Team, hit_dif), \n      weight = hit_dif),\n    fill=\"red\")+\n   \n  coord_flip() +\n  labs(\n    title = \"Hitting differential more accurate predictor of 2023 Final Four teams\",\n    subtitle= \"Pitt and Nebraska made up for offense with defense\",\n    x = \"Team\", \n    y = \"Hitting Diferential\",\n    caption=\"Data Courtesy of Evollve.net | By Derek Harrington\")+\n  theme_minimal() +\n    theme(\n    plot.title = element_text(size = 15, face = \"bold\"),\n    plot.subtitle = element_text(size = 12),\n    axis.title = element_text(size = 10),\n    panel.grid.minor = element_blank(),\n    plot.title.position = \"plot\",\n    legend.position=\"none\"\n  ) \n\n\n\n\n\n\n\n\n\nAs we can see, three of the top four teams that led the country in hitting differential made the 2023 Final Four. Oregon, who sat fourth, lost to Wisconsin in a regional final. Stanford, Tennessee and Texas were all in the same regional. It’s clear that hitting differential can give you a pretty accurate idea of what teams could be considered favorites in the post season.\nBut these hitting differentials don’t necessarily mean the same thing for each team. Remember, Wisconsin was hitting above .300 as a team last year, but they’re second in hitting differential, meaning teams could score against the badgers. Conversely, for Pitt and Nebraska, while they both had a modest hitting efficiency, they held two of the top three spots indicating they had suffocating defenses.\nOne last interesting thing to look at is how these hitting differentials evolve over the course of a season. Let’s look at a step chart for both the 2022 and 2023 seasons.\n\n\nCode\nhit_def_step_22 &lt;- offense |&gt;\n  \n   select(\n    team_name,\n    season,\n    game_date,\n    kills,\n   attack_errors,\n   opp_kills,\n   opp_attack_errors,\n   attacks,\n   opp_attacks\n   \n  ) |&gt;\n  filter(season==\"2022\")|&gt;\n  drop_na()|&gt;\n   group_by(team_name, game_date)|&gt;\n  summarize(\n    total_kills = sum(kills),\n    total_errors = sum(attack_errors),\n    total_attempts = sum(attacks),\n    total_opp_kills = sum(opp_kills),\n    total_opp_errors = sum(opp_attack_errors),\n    total_opp_attacks = sum(opp_attacks)\n  ) |&gt;\n mutate(\n   Cumkills = cumsum(total_kills),\n   Cumattacks= cumsum(total_attempts),\n   Cumerrors = cumsum(total_errors),\n   Cumoppkills=cumsum(total_opp_kills),\n   Cumopperrors=cumsum(total_opp_errors),\n   Cumoppattacks=cumsum(total_opp_attacks),\n   Cumhitpct = (Cumkills -  Cumerrors)/Cumattacks,\n   Cumopp_hitpct = (Cumoppkills -Cumopperrors)/Cumoppattacks,\n   Cumhit_dif = Cumhitpct - Cumopp_hitpct\n   )|&gt;\n  \n\n  rename(Team = team_name) |&gt;\n  select(Team,game_date, Cumkills, Cumattacks, Cumerrors, Cumoppkills,Cumopperrors, Cumoppattacks, Cumhit_dif) |&gt;\n  filter(Team %in% top_ten22)\n\n\n\n#dataframe for 2023 hitting difference\nhit_def_step_23 &lt;- offense |&gt;\n  \n   select(\n    team_name,\n    season,\n    game_date,\n    kills,\n   attack_errors,\n   opp_kills,\n   opp_attack_errors,\n   attacks,\n   opp_attacks\n   \n  ) |&gt;\n  filter(season==\"2023\")|&gt;\n  drop_na()|&gt;\n   group_by(team_name, game_date)|&gt;\n  summarize(\n    total_kills = sum(kills),\n    total_errors = sum(attack_errors),\n    total_attempts = sum(attacks),\n    total_opp_kills = sum(opp_kills),\n    total_opp_errors = sum(opp_attack_errors),\n    total_opp_attacks = sum(opp_attacks)\n  ) |&gt;\n mutate(\n   Cumkills = cumsum(total_kills),\n   Cumattacks= cumsum(total_attempts),\n   Cumerrors = cumsum(total_errors),\n   Cumoppkills=cumsum(total_opp_kills),\n   Cumopperrors=cumsum(total_opp_errors),\n   Cumoppattacks=cumsum(total_opp_attacks),\n   Cumhitpct = (Cumkills -  Cumerrors)/Cumattacks,\n   Cumopp_hitpct = (Cumoppkills -Cumopperrors)/Cumoppattacks,\n   Cumhit_dif = Cumhitpct - Cumopp_hitpct\n   )|&gt;\n  \n\n  rename(Team = team_name) |&gt;\n  select(Team,game_date, Cumkills, Cumattacks, Cumerrors, Cumoppkills,Cumopperrors, Cumoppattacks, Cumhit_dif) |&gt;\n  filter(Team %in% top_ten23)\n  \n#make a step chart for 2022 and 2023 for hit diff\n\n\nnu22 &lt;- hit_def_step_22 |&gt; filter(Team==\"Nebraska\")\nut22 &lt;- hit_def_step_22 |&gt; filter(Team==\"Texas\")\nggplot() +\n  geom_step(\n    data =hit_def_step_22 , \n    aes(x = game_date, y = Cumhit_dif, group = Team), color=\"grey\")+\n    geom_step(\n    data =nu22 , \n    aes(x = game_date, y = Cumhit_dif, group = Team), color=\"#d00000\"  \n      )+\n   geom_step(\n    data =ut22 , \n    aes(x = game_date, y = Cumhit_dif, group = Team), color=\"#bf5700\"  \n      ) +\n  scale_y_continuous(\n      breaks=c(-.5, -.4, -.3,-.2, -.1, 0, .1, .2, .3)\n    )+\n  annotate(\n    \"text\", \n    x = (as.Date(\"2022-12-14\")), \n    y = .130, \n    label = \"Nebraska\"\n  ) +\n  annotate(\n    \"text\", \n    x = (as.Date(\"2022-12-17\")), \n    y = .200, \n    label = \"Texas\"\n  ) +\n  labs(\n    x = \"Date\", \n    y = \"Hitting Differential\", \n    title = \"Texas dominated both offensively and defensively in 2022\", \n    subtitle=\"Nebraska was about middle of the pack\",\n    caption=\"Data Courtesy of Evollve.net | By Derek Harrington\") +\n  theme_minimal() + \n  theme(\n    plot.title = element_text(\n      size = 16, face = \"bold\"\n    ),\n    plot.subtitle = element_text(size = 12),\n    axis.title = element_text(size = 10),\n    panel.grid.minor = element_blank(),\n    plot.title.position = \"plot\"\n  )\n\n\n\n\n\n\n\n\n\nTexas started in the upper echelon of hitting differential in 2022, but not at the top. The brutal non-conference schedule that Texas had no doubt contributed to this. But, as Texas entered its Big 12 conference slate, its hitting differential continued to rise through the end of the year, and they led the country in that statistic after winning the championship match. Nebraska, on the flip side, started as the top team in this statistic but gradually fell through the beginning portions of the schedule and then leveled off once it got into Big Ten play. You can even see the dip right before December when the injury to Kenzie Knuckles occurred and lineup changes were made.\nThe 2023 season, however, tells a very different story.\n\n\nCode\nnu23 &lt;- hit_def_step_23 |&gt; filter(Team==\"Nebraska\")\nut23 &lt;- hit_def_step_23 |&gt; filter(Team==\"Texas\")\nggplot() +\n  geom_step(\n    data =hit_def_step_23 , \n    aes(x = game_date, y = Cumhit_dif, group = Team), color=\"grey\")+\n   geom_step(\n    data =nu23 , \n    aes(x = game_date, y = Cumhit_dif, group = Team), color=\"#d00000\" \n      )+\n   geom_step(\n    data =ut23 , \n    aes(x = game_date, y = Cumhit_dif, group = Team), color=\"#bf5700\"  \n      )+\n   annotate(\n    \"text\", \n    x = (as.Date(\"2023-12-19\")), \n    y = .16, \n    label = \"Nebraska\"\n  ) +\n  annotate(\n    \"text\", \n    x = (as.Date(\"2023-12-20\")), \n    y = .095, \n    label = \"Texas\"\n  ) +\n  labs(\n    x = \"Date\", \n    y = \"Hitting Differential\", \n    title = \"Nebraska's offense/defense combo was among the best in 2023\", \n    subtitle=\"Texas steadily improved to a run through tournament\",\n    caption=\"Data Courtesy of Evollve.net | By Derek Harrington\") +\n  theme_minimal() + \n  theme(\n    plot.title = element_text(\n      size = 15, face = \"bold\"\n    ),\n    plot.subtitle = element_text(size = 12),\n    axis.title = element_text(size = 10),\n    panel.grid.minor = element_blank(),\n    plot.title.position = \"plot\"\n  )\n\n\n\n\n\n\n\n\n\nWe see Nebraska once again started near the top of this statistic and continued to gradually fall, although they were still among the top three to four teams throughout the season.\nTexas meanwhile, had a rough start. The Longhorns suffered some losses in the non-conference portion of their schedule and remained relatively steady through Big 12 play. Toward the second half of November and then throughout the tournament, they began climbing, meaning the offense for the Longhorns was picking up. Just in time. After the tournament ended, Nebraska still had a top 3 hitting differential among the top 10 teams, but Texas walked away with the title.\n\n\nTakeaways\nWe know hitting efficiency is a stat that everyone wants to look at, especially during a game, to see how much success a team is having. While it can give an instant snapshot of a game, season, etc., it’s not the entire story. Earned points and points given away per set can show which teams are great at scoring the ball in a variety of ways, and who struggles with giving away free points.\nPerhaps the best metric for analyzing and predicting a team’s success is hitting differential. While it’s not 100% foolproof (Hello Texas’ run through the 2023 tournament!), it does a decent job at predicting who the elite teams are."
  }
]